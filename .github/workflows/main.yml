
# Install packages, update data, test, and archive 

name: CI

on:

  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  schedule:
    - cron: "0 18 * * 1,4"

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

env:
  USE_BSPM: "true"
  _R_CHECK_FORCE_SUGGESTS_: "false"
  R_REMOTES_NO_ERRORS_FROM_WARNINGS: true
  GITHUB_PAT: ${{ secrets.GITHUB_TOKEN }}
  WU_API_KEY: ${{ secrets.WU_API_KEY }}
  USGS_PASSWORD: ${{ secrets.USGS_PASSWORD }}
  ACTIONS_ALLOW_UNSECURE_COMMANDS: true

jobs:
  ci:
    strategy:
      matrix:
        include:
          - {os: ubuntu-latest}

    runs-on: ${{ matrix.os }}

    steps:
      - uses: actions/checkout@v3
        with:
          # pull_request ref https://github.com/orgs/community/discussions/28474
          ref: ${{ github.event.pull_request.head.sha }}

      - name: Get R2u Script
        run: curl -OLs https://eddelbuettel.github.io/r-ci/run.sh && chmod 0755 run.sh

      - name: Bootstrap
        run: ./run.sh bootstrap

      - name: Dependencies
        run: ./run.sh install_all

      - name: Install Python system dependencies
        run: |
          pip install -U pandas numpy landsatxplore

      - name: Test
        run: ./run.sh run_tests

      - name: Check for new files
        id: check_files
        run: |
          if [[ -z "$(git status --porcelain)" ]] ; then 
            echo "Git status is empty"
            echo "diff=FALSE" >> $GITHUB_OUTPUT
          else 
            echo "diff=TRUE" >> $GITHUB_OUTPUT
          fi

      - name: Bump version
        id: version
        env: 
          LOG: ${{ '$(git --no-pager log --no-merges --format=%B -n 1)' }}
          CRON: ${{ github.event_name == 'schedule' && 'TRUE' || 'FALSE' }}
        run: |
          R -e "source('version_bump.R'); bump_version('${{ env.LOG }}', ${{ env.CRON }}, ${{ steps.check_files.outputs.diff }})"
          if echo "$(git status --porcelain)" | grep -q version.txt ; then 
            echo "Version changed"
            echo "new_ver=TRUE" >> $GITHUB_OUTPUT
          else 
            echo "No version bump"
            echo "new_ver=FALSE" >> $GITHUB_OUTPUT
          fi

      - name: Setup Tag
        if: github.event_name != 'pull_request' && steps.version.outputs.new_ver == 'TRUE'
        id: tagging
        run: |
          value=`cat version.txt`
          echo "tag=$value" >> $GITHUB_OUTPUT
          value="v${value}"
          echo "release=$value" >> $GITHUB_OUTPUT

      - name: Tag new version for release
        if: github.event_name != 'pull_request' && steps.version.outputs.new_ver == 'TRUE'
        env: 
          JOB_TAGS: ${{ github.event_name == 'schedule' && '[skip ci] [cron]' || '[skip ci]' }}
        uses: EndBug/add-and-commit@v9
        with:
          author_name: Weecology Deploy Bot
          author_email: weecologydeploy@weecology.org
          message: "Update data and trigger archive: GitHub Build ${{ github.run_number }} ${{ env.JOB_TAGS }}"
          tag: ${{ steps.tagging.outputs.tag }}

      - name: Create Release
        if: github.event_name != 'pull_request' && steps.version.outputs.new_ver == 'TRUE'
        id: create_release
        uses: zendesk/action-create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.tagging.outputs.tag }}
          release_name: ${{ steps.tagging.outputs.tag }}
          body: ${{ steps.tagging.outputs.release }}
