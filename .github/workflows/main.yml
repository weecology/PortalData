# Install packages, update data, test, and archive 

name: CI

on:

  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  schedule:
    - cron: "0 18 * * 1,4"

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
  build:
    if: contains(toJson(github.event.commits), '[skip ci]') == false
    
    runs-on: ${{ matrix.config.os }}

    name: ${{ matrix.config.os }} (${{ matrix.config.r }})

    strategy:
      matrix:
        config:
          - {os: ubuntu-latest, r: 'release', rspm: "https://packagemanager.rstudio.com/cran/__linux__/xenial/latest"}
          
    env:
      R_REMOTES_NO_ERRORS_FROM_WARNINGS: true
      RSPM: ${{ matrix.config.rspm }}
      GITHUB_PAT: ${{ secrets.GITHUB_TOKEN }}
      
    steps:
      - uses: actions/checkout@v2
        with:
            fetch-depth: 3
      - uses: r-lib/actions/setup-r@master
        
      - name: Cache R packages
        uses: actions/cache@v2
        with:
          path: ${{ env.R_LIBS_USER }}
          key: ${{ runner.os }}-${{ hashFiles('.github/R-version') }}-2-${{ hashFiles('.github/depends.Rds') }}
          restore-keys: |
            ${{ runner.os }}-${{ hashFiles('.github/R-version') }}-2-
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-

      - name: Install system dependencies
        run: |
          sudo apt-get install libgit2-dev libicu-dev gdal-bin proj-data proj-bin libv8-dev libprotobuf-dev protobuf-compiler  libudunits2-dev libgdal-dev libgeos-dev libproj-dev libfontconfig1-dev libjq-dev
          sudo add-apt-repository ppa:xapienz/curl34
          echo "deb http://mirrors.kernel.org/ubuntu/ xenial main" | sudo tee -a /etc/apt/sources.list && sudo apt-get update && sudo apt install -y --allow-unauthenticated libpng12-0
          sudo apt-get update

      - name: Install packages
        run: Rscript install-packages.R        
        
      - name: Update data
        run: |
          echo WU_API_KEY = ${{ secrets.WU_API_KEY }} >> $HOME/.Renviron
          echo USGS_PASSWORD = ${{ secrets.USGS_PASSWORD }} >> $HOME/.Renviron
          R -e 'readRenviron("~/.Renviron")'
          Rscript update-data.R
          
      - name: Test
        run: Rscript testthat.R
        
      - name: Check for new files
        id: check_files
        run: |
          if [[ -z "$(git status --porcelain)" ]] ; then 
            echo "Git status is empty"
            echo "::set-output name=diff::FALSE"
          else 
            echo "::set-output name=diff::TRUE"
          fi
      
      - name: Bump version
        id: version
        env: 
          LOG: ${{ github.event_name == 'pull_request' && '$(git log --no-merges --format=%B -n 1 HEAD^2)' || '$(git log --no-merges --format=%B -n 1 HEAD)' }}
          CRON: ${{ github.event_name == 'schedule' && 'TRUE' || 'FALSE' }}
        run: |
          R -e "source('version_bump.R'); bump_version('${{ env.LOG }}', ${{ env.CRON }}, ${{ steps.check_files.outputs.diff }})"
          if echo "$(git status --porcelain)" | grep -q version.txt ; then 
            echo "Version changed"
            echo "::set-output name=new_ver::TRUE"
          else 
            echo "No version bump"
            echo "::set-output name=new_ver::FALSE"
          fi
        
      - name: Tag new version for release
        if: github.event_name != 'pull_request' && steps.version.outputs.new_ver == 'TRUE'
        env: 
          VERSION: "${{ 'v$(cat version.txt)' }}"
          JOB_TAGS: "${{ github.event_name == 'schedule' && '[skip ci] [cron]' || '[skip ci]' }}"
        uses: EndBug/add-and-commit@v7
        with:
          author_name: Weecology Deploy Bot
          author_email: weecologydeploy@weecology.org
          message: "Update data and trigger archive: GitHub Build ${GITHUB_RUN_NUMBER} ${{ env.JOB_TAGS }}"
          tag: ${{ env.VERSION }}
          
